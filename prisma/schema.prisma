// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")

}

model QRModel {
  id Int    @id @default(autoincrement())
  qr String @unique()
  activate Boolean @default(false)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model User {
  id        Int    @id @default(autoincrement())
  studentId String @unique
  name      String
  password  String
  idCard    String
  major     Major
  email     String @unique
  campus    Campus
  isValid      Boolean       @default(false)
  isManaged    Boolean       @default(false)
  reservations Reservation[]
  member       Reservation[] @relation(name: "reservation") //동반자인 경우 예약
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

//member와 group M:N 관계
//user와 reservations 1:N 관계

model Reservation {
  id     Int    @id @default(autoincrement())
  reserveNum  String
  user   User   @relation(fields: [userId], references: [id]) //예약자
  userId Int
  room  Room @relation(fields: [roomId], references:[id], onDelete:Cascade)
  roomId Int
  schedule Schedule[]
  group  User[] @relation(name: "reservation") //동반자 group
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Room {
  id           Int     @id @default(autoincrement())
  major        Major
  roomNumber   Int
  description  String
  open         String?
  closed       String?
  reservation  Reservation[]
  schedules    Schedule[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@unique([major,roomNumber])
}

model Schedule {
  id         Int     @id @default(autoincrement())
  year       String
  month      String
  date       String
  start      String
  finish     String
  class      String
  isReserved Boolean @default(false)
  userId     Int
  rooms      Room[]
  reservation Reservation @relation(fields: [reserveId], references:[id], onDelete:Cascade) 
  reserveId  Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

}


enum Campus {
  Seoul
  Global
}

enum Major {
  Computer
  Information_Communication
}
